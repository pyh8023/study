@startuml
title EventDrivenFaultTolerantQueryScheduler构造方法执行
autonumber
-> EventDrivenFaultTolerantQueryScheduler: new()
autonumber 1.1
EventDrivenFaultTolerantQueryScheduler -> StageRegistry: new()

autonumber 2
-> EventDrivenFaultTolerantQueryScheduler: start()
autonumber 2.1
EventDrivenFaultTolerantQueryScheduler -> EventDrivenFaultTolerantQueryScheduler.Scheduler : new()
autonumber 2.1.1
EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenFaultTolerantQueryScheduler.Scheduler : sortPlanInTopologicalOrder
autonumber 2.2
EventDrivenFaultTolerantQueryScheduler -> EventDrivenFaultTolerantQueryScheduler.Scheduler : run()
autonumber 2.2.1
EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenFaultTolerantQueryScheduler.Scheduler : schedule()
autonumber 2.2.1.1
EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenFaultTolerantQueryScheduler.Scheduler : optimize()
EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenFaultTolerantQueryScheduler.Scheduler : updateStageExecutions()
autonumber 2.2.1.2.1
group 遍历执行计划分段SubPlan，每个分段执行下面内容
    EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenFaultTolerantQueryScheduler.Scheduler : createStageExecution()
    autonumber 2.2.1.2.1.1
    EventDrivenFaultTolerantQueryScheduler.Scheduler -> SqlStage : createSqlStage()
    EventDrivenFaultTolerantQueryScheduler.Scheduler <-- SqlStage : stage[SqlStage]
    EventDrivenFaultTolerantQueryScheduler.Scheduler -> StageRegistry : add(stage)
    EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenTaskSourceFactory : create()
    autonumber 2.2.1.2.1.4.1
    EventDrivenTaskSourceFactory -> SplitSourceFactory : createSplitSources()
    EventDrivenTaskSourceFactory -> EventDrivenTaskSourceFactory : createSplitAssigner()
    EventDrivenTaskSourceFactory -> EventDrivenTaskSource : new()
    autonumber 2.2.1.2.1.5
    EventDrivenTaskSourceFactory --> EventDrivenFaultTolerantQueryScheduler.Scheduler : taskSource[EventDrivenTaskSource]
    EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenTaskSource : start()
    EventDrivenFaultTolerantQueryScheduler.Scheduler -> ExchangeManager : createExchange()
    EventDrivenFaultTolerantQueryScheduler.Scheduler <-- ExchangeManager : exchange[Exchange]
    EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenFaultTolerantQueryScheduler.StageExecution : new()
end
autonumber 2.2.1.3
EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenFaultTolerantQueryScheduler.Scheduler : scheduleTasks()
EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenFaultTolerantQueryScheduler.Scheduler : processNodeAcquisitions()
autonumber 2.2.1.4.1
EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenFaultTolerantQueryScheduler.StageExecution : schedule()
autonumber 2.2.1.4.1.1
EventDrivenFaultTolerantQueryScheduler.Scheduler -> SqlStage : createTask()
autonumber 2.2.1.4.1.1.1
SqlStage -> HttpRemoteTask : new()
autonumber 2.2.1.4.2
EventDrivenFaultTolerantQueryScheduler.Scheduler <-- SqlStage : remoteTask[Optional<HttpRemoteTask>]
EventDrivenFaultTolerantQueryScheduler.Scheduler -> HttpRemoteTask : start()
autonumber 2.2.2
EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenFaultTolerantQueryScheduler.Scheduler : processEvents()
EventDrivenFaultTolerantQueryScheduler.Scheduler -> EventDrivenFaultTolerantQueryScheduler.Scheduler : schedule()
note right of EventDrivenFaultTolerantQueryScheduler.Scheduler
processEvents()和schedule()循环调用，直到查询完成或者放弃
end note
@enduml